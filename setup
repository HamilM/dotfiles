#!/bin/bash

function install_package {
	PACMAN_INSTALL_FLAGS="-S --noconfirm"
	pacman $PACMAN_INSTALL_FLAGS "$@"
}


# First - connect to wifi
WIFI_INTERFACE_NAME=$(find /sys/class/net -maxdepth 2 -follow -name "wireless" | cut -d/ -f5 )
if [[ -n $WIFI_INTERFACE_NAME ]]; then
	wifi-menu -o $WIFI_INTERFACE_NAME
fi

# enable multilib for 32-bit support.
# uncomment relevant line in /etc/pacman.conf and them run "pacman -Syu"

###########################
########## CODE ###########
###########################
install_package git python python-pip neovim openssh
ln -s /bin/nvim /bin/vim

###########################
####### ENVIRONMENT #######
###########################
install_package zsh zsh-autosuggestions zsh-syntax-highlighting rxvt-unicode imagemagick feh neofetch ntp i3-gaps i3blocks rofi

# Enable ntp services for auto-correcting time
timedatectl set-ntp true

# Install oh-my-zsh
sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
# Setup as default shell
chsh -s /bin/zsh

pip install pywal
wal -a 90

if [[ -n $(lspci | grep -i nvidia) ]]; then
	echo "Installing bumblebee + nvidia"
	install_package bumblebee mesa xf86-video-nouveau nvidia-lts lib32-virtualgl lib32-nvidia-utils
	gpasswd -a $(whoami) bumblebee
	systemctl enable bumblebeed.service
fi

# setting up i3blocks sample scripts (is this really needed?)
pushd .
git clone https://github.com/vivien/i3blocks-contrib ~/.config/i3blocks
cd !$
cp config.example config
cd bandwidth2
make
popd

# i3blocks dependecies
install_package acpi sysstat alsa-utils ttf-font-awesome otf-font-awesome

###########################
####### NETWORKING ########
###########################

WIFI_INTERFACE_NAME="wlp2s0"

# wpa_actiond - Automatically connect to Wi-Fi networks in range.
install_package wpa_actiond

# Start the wpa_actiond upon boot, and immediately.
systemctl enable netctl-auto@wlp2s0.service
systemctl start netctl-auto@wlp2s0.service

###########################
######### LOCALE ##########
###########################

# Generate XKB hebrew keyboard layout
localectl set-x11-keymap us,il asus_laptop "" grp:alt_shift_toggle

# Set current configuration to it as well
setxkbmap -layout us,il -model asus_laptop -option 'grp:alt_shift_toggle'

# This package fixes up some hebrew problems in terminals
install_package ttf-dejavu 

###########################
######### SOUND ###########
###########################

install_package pulseaudio pulseaudio-alsa pamixer
DEFAULT_VOLUME_LEVEL=20
pamixer --set-volume $DEFAULT_VOLUME_LEVEL
pamixer -u

###########################
########## APPS ###########
###########################

# evince - PDF viewer.
# retext - MD editor
install_package evince retext

###########################
######### FINAL ###########
###########################
# After all is setup generate Xorg configuration and put it in the correct folder.
# We generate this configuration because the configuration is not generated which caused
# backlight support problems.
Xorg :2 -configure
if [ ! -f /root/xorg.conf.new ]; then
	echo "[ERROR]	Failed to configure Xorg (Xorg :2 -configure)."
else
	cp /root/xorg.conf.new /etc/X11/xorg.conf.d/20-xorg-generated.conf
fi
